后台管理系统权限分级:
    1.管理员
        它具有当前项目使用所有功能和模块的权限,同时还可以新增帐号
            修改账号信息等功能

    2.访客
        它具有当前项目使用部分功能和模块的权限,无法添加修改帐号

需求:根据用户的账号权限,控制用户能够访问的路由
拆解:
    1.根据用户的账号权限
        当用户登录的时候,可以获取到用户权限信息
            通过login接口,将用户的帐号密码兑换成用户的唯一标识token字符串
            通过info接口,将用户的token兑换成用户的个人信息
                在返回的个人信息中,具有的重要数据
                    buttons=>当前账号能够使用的按钮权限
                    routes=>当前账号能够访问的路由的别名

    2.控制用户能够访问的路由
        公司中实现该功能具有两种方案:
            1.使用导航守卫,在跳转的时候,判断当前用户是否具有访问该路由的权限
            2.在初始化项目的时候,故意将部分路由不进行注册
                只要我们没注册的路由,用户肯定无法访问

                问题:如何动态注册路由?
                    API:router.addRoute router.addRoutes
                    想要使用成功这些API,需要得到一个路由数组
                        需要将没有注册的路由组成一个新的数组


路由级权限管理功能流程:
    1.将路由数组切割为三种不同的路由数组
        分别是常量路由,异步路由,任意路由

    2.用户通过info接口,获取到用户的权限信息之后,我们会将对应的权限数据保存在Vuex中

    3.根据流程1中得到的异步路由数组,配合流程2中获取到的用户权限信息(routeNames数组)
        过滤得到当前用户能够访问的异步路由数组

        注意:一定要深拷贝,初始的asyncRoutes,否则当用户更换帐号之后,很可能出现异步路由显示不正确
            功能缺失的问题
        
    4.使用router.addRoutes方法,将流程3中处理得到的异步路由数组,注入路由器中

        注意:在全局前置守卫中,存在的问题
            1.由于异步路由注册效果有延迟,如果在异步路由的页面刷新,很可能出现白屏效果
                原因是全局前置守卫中的next(),只会跳转一次路由,但是第一次跳转无法获取到当前最新的异步路由,会跳转失败

                解决:将next()改为next({...to}),该写法会导致当前项目跳转完一次之后,强制跳转第二次,
                    而在第二次跳转的时候,就可以获取到最新的异步路由,让页面成功显示

            2.如果用户通过地址栏跳转一个路径
                如果用户有资格访问该路径,那么我们就放行,让他跳转
                如果用户没有资格访问该路径,那么我们就带她回到首页

                代码:router.resolve({path:to.fullPath}).resolved.fullPath === to.fullPath


    扩展:
        如果用户退出登录,需要将当前用户的路由信息全部清空
            Vue2中需要重新生成一个全新的router对象
            Vue3中具有removeRoute方法可以去删除所有带名字的路由对象



需求:根据用户帐号权限信息,控制用户可以使用的按钮
拆解:
    1.根据用户帐号权限信息
        当用户登录的时候,可以获取到用户权限信息
            通过login接口,将用户的帐号密码兑换成用户的唯一标识token字符串
            通过info接口,将用户的token兑换成用户的个人信息
                在返回的个人信息中,具有的重要数据
                    buttons=>当前账号能够使用的按钮权限
                    routes=>当前账号能够访问的路由的别名

    2.控制用户可以使用的按钮
        只要让按钮从页面上消失,用户就无法触发该功能
            此处一定要注意,v-if隐藏元素是直接不解析该节点,控制台中根本没有他
                           v-show隐藏元素是使用css样式隐藏该节点,控制台中有他
                            注意:千万别使用v-show
                            

按钮级权限管理流程:
    1.将用户登录之后的按钮权限buttons数组,交给封装好的mapButtons方法进行处理
        实现数组数据类型转换为对象数据类型
            该对象身上会将拥有的权限作为属性名,属性值为true

    2.在全局自定义Vue指令,在指令中根据当前指令的value值,以及Vuex中的buttons对象,
        实现对用户能否使用该按钮这件事情进行判断,如果不能使用,就使用真实DOM删除当前节点

    3.给需要权限控制的按钮,写上当前的自定义指令,并传入当前按钮需要的权限


问题:为什么具有login和info两个接口?
原因:通过login接口可以获取到用户的token数据,我们会将token数据保存在Vuex和localStorage中
    保存在Vuex中,是为了本次项目能够快速读取token,加快计算速度
    保存在localSTorage中,是为了下次启动项目,能够获取到上次的token,直接请求info接口,获取到用户的信息
        也就是所谓的7天免登陆

    注意:token是否过期,是由后端判断的,如果过期了,后端会返回401状态,告知前端token过期