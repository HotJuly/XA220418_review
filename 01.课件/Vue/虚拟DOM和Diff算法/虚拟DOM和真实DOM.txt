1.对虚拟DOM和真实DOM的了解
	真实DOM(其实就是一阶段学习的原生DOM)
		他是一个对象
		原生DOM是一个标签,元素,节点(粗略理解)

		原生DOM是js中的对象,与html的标签不是同一个东西

		原生DOM是根据页面上标签抽象化之后得到的对象
			将某个东西的重要属性抽取出来,使用js对象进行记录

		原生DOM其实就是浏览器提供给开发者才做页面标签的接口
			原生DOM对象与页面上的标签是具有映射关系的(双向映射)


	虚拟DOM
		他是一个对象

		虚拟DOM也是根据页面上某个标签抽象化之后得到的对象

		虚拟DOM不是浏览器提供的接口
			所以虚拟DOM和页面上的标签并没有映射关系
				操作虚拟DOM不会影响到页面上标签的显示

		虚拟DOM的构造函数是VNode

2.既然有了真实DOM,为什么还要有虚拟DOM?
	体量不同
		真实DOM身上会记录非常多的属性,会占用很多的内存,而且重点是这些属性平常根本用不上
			在浪费内存

		虚拟DOM身上只会记录标签的核心属性,占用的内存较少,可以节省内存空间

	渲染性能
		操作真实DOM很可能会导致页面多次的重绘重排
			连续操作多次真实DOM,并不会导致页面多次渲染
				但是,操作真实DOM,需要页面重新渲染,需要通知GUI线程准备更新页面
					操作真实DOM需要js线程和GUI线程配合操作,中间需要很多的交互时间
					

		操作虚拟DOM只是内存级操作,不会影响到页面上的展示效果
			因为虚拟DOM就只是一个普通的js对象,跟页面上的标签没有映射关系
			操作虚拟DOM只是js线程自己在玩,跟GUI无关,速度非常快
	
3.总结
	虚拟DOM的操作性能的确完胜真实DOM
	但是虚拟DOM无法影响到页面,所以虚拟DOM还是摆脱不了真实DOM,想让用户看到变化的结果,还是需要真实DOM












