问题一:Vuecli脚手架,是如何解析.vue中的style样式的,请说明过程
回答:
	1.webpack遇到了.vue文件,会使用vue-loader包去解析当前文件内容
	2.webpack得到了style标签中的内容之后,由于是sass语法,所以需要使用sass-loader解析这些sass样式
	3.webpack得到了解析结果css代码,使用css-loader,将css代码变成js版本的css
		其实就是将css样式字符串存在js里面
	4.使用style-loader,将流程3中得到的字符串,使用style标签的形式插入到页面上

问题二:那么,如何让每个组件的样式,不影响到其他组件?
回答:给style标签添加scoped属性即可约束当前样式的作用范围

问题三:scoped的作用范围
回答:	当前组件内部以及子组件的根标签

问题四:scoped是如何做到样式具有作用域效果的
回答	
	1.Vue会给当前组件中所有的节点都添加上一个唯一的hash值
		注意:不仅只有内部的子节点会被打上hash值,子组件的根节点也会有相同的hash值

	2.给当前scoped中所有的样式,都添加上标签选择器,用于匹配标签的hash值

问题五:那么,既然scoped会生成css作用域,如何穿透该作用域
回答:	可以使用深度选择,穿透当前的样式作用域
	Vue2的指令->::v-deep
	Vue3的指令->::deep()

问题六:深度选择器是如何实现该效果的?
回答:
	其实就是将本来写在类名之后的属性选择器(hash值),改成了写在父类名的身上
	只要是当前父类名中的后代节点都可以享受到当前类名的效果